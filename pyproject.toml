[project]
dependencies = [
    "mini-dust3r>=0.1.1,<0.2",
    "mmcv-lite>=2.2.0,<3",
    "pillow-heif>=0.18.0,<0.19",
    "build>=1.2.2.post1,<2",
]
description = "Add a short description here"
name = "instant_splat"
requires-python = ">= 3.11"
version = "0.1.0"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["instant_splat*"]

[tool.pixi.project]
channels = ["nvidia", "nvidia/label/cuda-11.8.0", "conda-forge", "pytorch"]
platforms = ["linux-64"]

[tool.pixi.system-requirements]
libc = { family = "glibc", version = "2.31" }

[tool.pixi.activation]
scripts = [".pixi.sh"]

[tool.pixi.pypi-dependencies]
roma = ">=1.5.0, <2"
evo = ">=1.30.0, <2"
pyglet = "<2"
huggingface-hub = "*"
simple_knn = { url = "https://huggingface.co/datasets/pablovela5620/instantsplat/resolve/main/simple_knn-0.1.0%2Bpt231cu118-cp311-cp311-linux_x86_64.whl" }
diff_gaussian_rasterization = { url = "https://huggingface.co/datasets/pablovela5620/instantsplat/resolve/main/diff_gaussian_rasterization-0.1.0%2Bpt231cu118-cp311-cp311-linux_x86_64.whl" }
imageio = { version = "*", extras = ["ffmpeg"] }
instant_splat = { path = ".", editable = true }
# instant_splat = { path = "dist/instant_splat-0.1.0-py3-none-any.whl" }

[tool.pixi.dependencies]
python = "3.11.*"
pytorch = { version = "2.3.1", channel = "pytorch" }
torchvision = { version = "0.18.1", channel = "pytorch" }
cuda = { version = "*", channel = "nvidia/label/cuda-11.8.0" }
pytorch-cuda = { version = "11.8.*", channel = "pytorch" }
cuda-nvcc = "11.8.*"
cuda-cccl = "11.8.*"
beartype = ">=0.18.5,<0.19"
rerun-sdk = ">=0.18.2,<0.19"
jaxtyping = ">=0.2.34,<0.3"
einops = ">=0.8.0,<0.9"
cmake = "==3.14.0"
pip = ">=24.2,<25"
gradio = ">=4.42.0,<5"
pydantic = "==2.10.6"
matplotlib = ">=3.9.1,<4"
tqdm = ">=4.66.5,<5"
scipy = ">=1.14.1,<2"
trimesh = ">=4.4.9,<5"
tensorboard = ">=2.17.1,<3"
gdown = ">=5.2.0,<6"
plyfile = ">=1.1,<2"
tyro = ">=0.8.11,<0.9"
icecream = ">=2.1.3,<3"

[tool.pixi.tasks]
post-install = { cmd = "pwd", depends_on = ["_download_ckpt"] }
_modify_rasterizer = { cmd = '''sed -i 's/p_view\.z <= 0\.2f/p_view\.z <= 0.001f/' submodules/diff-gaussian-rasterization/cuda_rasterizer/auxiliary.h''' }
_get-poses-example = { cmd = """python tools/coarse_init_infer.py --img_base_path data/TT/Family/3_views/ --n_views 3 --focal_avg""" }
_train-example = { cmd = """python tools/train_joint.py -s data/TT/Family/3_views/ -m output/TT/Family/3_views/ --n_views 3 --scene Family --iter 300 --optim_pose""" }
_render-example = { cmd = """python tools/render_by_interp.py -s data/TT/Family/3_views/ -m output/TT/Family/3_views/ --n_views 3 --scene Family --iter 300 --eval --get_video""" }
_build-wheel = "python -m build"
upload-hf = { cmd = "python tools/upload_to_hf.py", depends_on = [
    "_build-wheel",
] }

[tool.pixi.tasks._download_ckpt]
cmd = """
test -e "checkpoints/DUSt3R_ViTLarge_BaseDecoder_512_dpt.pth"
|| (
    mkdir -p checkpoints/
    && wget https://download.europe.naverlabs.com/ComputerVision/DUSt3R/DUSt3R_ViTLarge_BaseDecoder_512_dpt.pth -P checkpoints/
   )
"""

[tool.pixi.tasks.app]
cmd = """
    python tools/gradio_app.py
    """
description = "Runs Gradio frontend"
depends_on = ["post-install"]

[tool.pixi.tasks.dev-app]
cmd = """
    gradio tools/gradio_app.py
    """
description = "Runs Gradio frontend for hotreload"
depends_on = ["post-install"]

[tool.pixi.feature.spaces.tasks.app]
cmd = """
    python gradio_app.py
    """
description = "Runs Gradio frontend in huggingface spaces"
depends_on = ["post-install"]

[tool.pixi.feature.spaces.pypi-dependencies]
spaces = "*"

[tool.pixi.environments]
spaces = { features = ["spaces"], solve-group = "default" }

[tool.ruff]
ignore = [
    "F722", # Forward annotation false positive from jaxtyping. Should be caught by pyright.
]
